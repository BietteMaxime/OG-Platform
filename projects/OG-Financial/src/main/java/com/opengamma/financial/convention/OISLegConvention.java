/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.financial.convention;

import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import org.threeten.bp.Period;

import com.opengamma.id.ExternalIdBundle;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 * 
 */
@BeanDefinition
public class OISLegConvention extends Convention {

  /** Serialization version. */
  private static final long serialVersionUID = 1L;

  /**
   * The overnight index convention.
   */
  @PropertyDefinition(validate = "notNull")
  private String _overnightIndexConvention;

  /**
   * The payment period.
   */
  @PropertyDefinition(validate = "notNull")
  private Period _paymentPeriod;

  /**
   * The payment delay in days.
   */
  @PropertyDefinition
  private int _paymentDelay;

  /**
   * For the builder.
   */
  public OISLegConvention() {
    super();
  }

  public OISLegConvention(final String name, final ExternalIdBundle externalIdBundle, final String overnightIndexConvention, final Period paymentPeriod,
      final int paymentDelay) {
    super(name, externalIdBundle);
    setOvernightIndexConvention(overnightIndexConvention);
    setPaymentPeriod(paymentPeriod);
    setPaymentDelay(paymentDelay);
  }
  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code OISLegConvention}.
   * @return the meta-bean, not null
   */
  public static OISLegConvention.Meta meta() {
    return OISLegConvention.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(OISLegConvention.Meta.INSTANCE);
  }

  @Override
  public OISLegConvention.Meta metaBean() {
    return OISLegConvention.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -1218695809:  // overnightIndexConvention
        return getOvernightIndexConvention();
      case 1331459943:  // paymentPeriod
        return getPaymentPeriod();
      case -522327267:  // paymentDelay
        return getPaymentDelay();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case -1218695809:  // overnightIndexConvention
        setOvernightIndexConvention((String) newValue);
        return;
      case 1331459943:  // paymentPeriod
        setPaymentPeriod((Period) newValue);
        return;
      case -522327267:  // paymentDelay
        setPaymentDelay((Integer) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_overnightIndexConvention, "overnightIndexConvention");
    JodaBeanUtils.notNull(_paymentPeriod, "paymentPeriod");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      OISLegConvention other = (OISLegConvention) obj;
      return JodaBeanUtils.equal(getOvernightIndexConvention(), other.getOvernightIndexConvention()) &&
          JodaBeanUtils.equal(getPaymentPeriod(), other.getPaymentPeriod()) &&
          JodaBeanUtils.equal(getPaymentDelay(), other.getPaymentDelay()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getOvernightIndexConvention());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPaymentPeriod());
    hash += hash * 31 + JodaBeanUtils.hashCode(getPaymentDelay());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the overnight index convention.
   * @return the value of the property, not null
   */
  public String getOvernightIndexConvention() {
    return _overnightIndexConvention;
  }

  /**
   * Sets the overnight index convention.
   * @param overnightIndexConvention  the new value of the property, not null
   */
  public void setOvernightIndexConvention(String overnightIndexConvention) {
    JodaBeanUtils.notNull(overnightIndexConvention, "overnightIndexConvention");
    this._overnightIndexConvention = overnightIndexConvention;
  }

  /**
   * Gets the the {@code overnightIndexConvention} property.
   * @return the property, not null
   */
  public final Property<String> overnightIndexConvention() {
    return metaBean().overnightIndexConvention().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the payment period.
   * @return the value of the property, not null
   */
  public Period getPaymentPeriod() {
    return _paymentPeriod;
  }

  /**
   * Sets the payment period.
   * @param paymentPeriod  the new value of the property, not null
   */
  public void setPaymentPeriod(Period paymentPeriod) {
    JodaBeanUtils.notNull(paymentPeriod, "paymentPeriod");
    this._paymentPeriod = paymentPeriod;
  }

  /**
   * Gets the the {@code paymentPeriod} property.
   * @return the property, not null
   */
  public final Property<Period> paymentPeriod() {
    return metaBean().paymentPeriod().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the payment delay in days.
   * @return the value of the property
   */
  public int getPaymentDelay() {
    return _paymentDelay;
  }

  /**
   * Sets the payment delay in days.
   * @param paymentDelay  the new value of the property
   */
  public void setPaymentDelay(int paymentDelay) {
    this._paymentDelay = paymentDelay;
  }

  /**
   * Gets the the {@code paymentDelay} property.
   * @return the property, not null
   */
  public final Property<Integer> paymentDelay() {
    return metaBean().paymentDelay().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code OISLegConvention}.
   */
  public static class Meta extends Convention.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code overnightIndexConvention} property.
     */
    private final MetaProperty<String> _overnightIndexConvention = DirectMetaProperty.ofReadWrite(
        this, "overnightIndexConvention", OISLegConvention.class, String.class);
    /**
     * The meta-property for the {@code paymentPeriod} property.
     */
    private final MetaProperty<Period> _paymentPeriod = DirectMetaProperty.ofReadWrite(
        this, "paymentPeriod", OISLegConvention.class, Period.class);
    /**
     * The meta-property for the {@code paymentDelay} property.
     */
    private final MetaProperty<Integer> _paymentDelay = DirectMetaProperty.ofReadWrite(
        this, "paymentDelay", OISLegConvention.class, Integer.TYPE);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
      this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "overnightIndexConvention",
        "paymentPeriod",
        "paymentDelay");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case -1218695809:  // overnightIndexConvention
          return _overnightIndexConvention;
        case 1331459943:  // paymentPeriod
          return _paymentPeriod;
        case -522327267:  // paymentDelay
          return _paymentDelay;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends OISLegConvention> builder() {
      return new DirectBeanBuilder<OISLegConvention>(new OISLegConvention());
    }

    @Override
    public Class<? extends OISLegConvention> beanType() {
      return OISLegConvention.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code overnightIndexConvention} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> overnightIndexConvention() {
      return _overnightIndexConvention;
    }

    /**
     * The meta-property for the {@code paymentPeriod} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Period> paymentPeriod() {
      return _paymentPeriod;
    }

    /**
     * The meta-property for the {@code paymentDelay} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Integer> paymentDelay() {
      return _paymentDelay;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
