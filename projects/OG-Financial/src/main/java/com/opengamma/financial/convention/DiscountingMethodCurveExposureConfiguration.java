/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.financial.convention;

import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.id.ExternalIdBundle;
/**
 *
 */
@BeanDefinition
public class DiscountingMethodCurveExposureConfiguration extends CurveExposureConfiguration {

  /** Serialization version. */
  private static final long serialVersionUID = 1L;

  /**
   * The configuration type.
   */
  public static final String CONFIGURATION_TYPE = "DiscountingMethod";

  /**
   * The discounting curve name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _discountingCurveName;

  /**
   * The discounting curve calculation configuration name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _discountingCurveCalculationConfig;

  /**
   * The forward ibor curve name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _forwardIborCurveName;

  /**
   * The forward ibor curve calculation configuration name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _forwardIborCurveCalculationConfig;

  /**
   * The forward overnight curve name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _forwardOvernightCurveName;

  /**
   * The forward overnight curve calculation configuration name.
   */
  @PropertyDefinition(validate = "notNull")
  private String _forwardOvernightCurveCalculationConfig;

  /**
   * For the builder
   */
  public DiscountingMethodCurveExposureConfiguration() {
    super(CONFIGURATION_TYPE);
  }

  public DiscountingMethodCurveExposureConfiguration(final String name, final ExternalIdBundle externalIdBundle, final String discountingCurveName,
      final String discountingCurveConfigName, final String forwardIborCurveName, final String forwardIborCurveConfigName, final String forwardOvernightCurveName,
      final String forwardOvernightCurveConfigName) {
    super(CONFIGURATION_TYPE, name, externalIdBundle);
    setDiscountingCurveName(discountingCurveName);
    setDiscountingCurveCalculationConfig(discountingCurveConfigName);
    setForwardIborCurveName(forwardIborCurveName);
    setForwardIborCurveCalculationConfig(forwardIborCurveConfigName);
    setForwardOvernightCurveName(forwardOvernightCurveName);
    setForwardOvernightCurveCalculationConfig(forwardOvernightCurveConfigName);
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code DiscountingMethodCurveExposureConfiguration}.
   * @return the meta-bean, not null
   */
  public static DiscountingMethodCurveExposureConfiguration.Meta meta() {
    return DiscountingMethodCurveExposureConfiguration.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(DiscountingMethodCurveExposureConfiguration.Meta.INSTANCE);
  }

  @Override
  public DiscountingMethodCurveExposureConfiguration.Meta metaBean() {
    return DiscountingMethodCurveExposureConfiguration.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1721549337:  // discountingCurveName
        return getDiscountingCurveName();
      case 779895453:  // discountingCurveCalculationConfig
        return getDiscountingCurveCalculationConfig();
      case 680189945:  // forwardIborCurveName
        return getForwardIborCurveName();
      case 1094037693:  // forwardIborCurveCalculationConfig
        return getForwardIborCurveCalculationConfig();
      case 1802500187:  // forwardOvernightCurveName
        return getForwardOvernightCurveName();
      case -599865445:  // forwardOvernightCurveCalculationConfig
        return getForwardOvernightCurveCalculationConfig();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 1721549337:  // discountingCurveName
        setDiscountingCurveName((String) newValue);
        return;
      case 779895453:  // discountingCurveCalculationConfig
        setDiscountingCurveCalculationConfig((String) newValue);
        return;
      case 680189945:  // forwardIborCurveName
        setForwardIborCurveName((String) newValue);
        return;
      case 1094037693:  // forwardIborCurveCalculationConfig
        setForwardIborCurveCalculationConfig((String) newValue);
        return;
      case 1802500187:  // forwardOvernightCurveName
        setForwardOvernightCurveName((String) newValue);
        return;
      case -599865445:  // forwardOvernightCurveCalculationConfig
        setForwardOvernightCurveCalculationConfig((String) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_discountingCurveName, "discountingCurveName");
    JodaBeanUtils.notNull(_discountingCurveCalculationConfig, "discountingCurveCalculationConfig");
    JodaBeanUtils.notNull(_forwardIborCurveName, "forwardIborCurveName");
    JodaBeanUtils.notNull(_forwardIborCurveCalculationConfig, "forwardIborCurveCalculationConfig");
    JodaBeanUtils.notNull(_forwardOvernightCurveName, "forwardOvernightCurveName");
    JodaBeanUtils.notNull(_forwardOvernightCurveCalculationConfig, "forwardOvernightCurveCalculationConfig");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      DiscountingMethodCurveExposureConfiguration other = (DiscountingMethodCurveExposureConfiguration) obj;
      return JodaBeanUtils.equal(getDiscountingCurveName(), other.getDiscountingCurveName()) &&
          JodaBeanUtils.equal(getDiscountingCurveCalculationConfig(), other.getDiscountingCurveCalculationConfig()) &&
          JodaBeanUtils.equal(getForwardIborCurveName(), other.getForwardIborCurveName()) &&
          JodaBeanUtils.equal(getForwardIborCurveCalculationConfig(), other.getForwardIborCurveCalculationConfig()) &&
          JodaBeanUtils.equal(getForwardOvernightCurveName(), other.getForwardOvernightCurveName()) &&
          JodaBeanUtils.equal(getForwardOvernightCurveCalculationConfig(), other.getForwardOvernightCurveCalculationConfig()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getDiscountingCurveName());
    hash += hash * 31 + JodaBeanUtils.hashCode(getDiscountingCurveCalculationConfig());
    hash += hash * 31 + JodaBeanUtils.hashCode(getForwardIborCurveName());
    hash += hash * 31 + JodaBeanUtils.hashCode(getForwardIborCurveCalculationConfig());
    hash += hash * 31 + JodaBeanUtils.hashCode(getForwardOvernightCurveName());
    hash += hash * 31 + JodaBeanUtils.hashCode(getForwardOvernightCurveCalculationConfig());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the discounting curve name.
   * @return the value of the property, not null
   */
  public String getDiscountingCurveName() {
    return _discountingCurveName;
  }

  /**
   * Sets the discounting curve name.
   * @param discountingCurveName  the new value of the property, not null
   */
  public void setDiscountingCurveName(String discountingCurveName) {
    JodaBeanUtils.notNull(discountingCurveName, "discountingCurveName");
    this._discountingCurveName = discountingCurveName;
  }

  /**
   * Gets the the {@code discountingCurveName} property.
   * @return the property, not null
   */
  public final Property<String> discountingCurveName() {
    return metaBean().discountingCurveName().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the discounting curve calculation configuration name.
   * @return the value of the property, not null
   */
  public String getDiscountingCurveCalculationConfig() {
    return _discountingCurveCalculationConfig;
  }

  /**
   * Sets the discounting curve calculation configuration name.
   * @param discountingCurveCalculationConfig  the new value of the property, not null
   */
  public void setDiscountingCurveCalculationConfig(String discountingCurveCalculationConfig) {
    JodaBeanUtils.notNull(discountingCurveCalculationConfig, "discountingCurveCalculationConfig");
    this._discountingCurveCalculationConfig = discountingCurveCalculationConfig;
  }

  /**
   * Gets the the {@code discountingCurveCalculationConfig} property.
   * @return the property, not null
   */
  public final Property<String> discountingCurveCalculationConfig() {
    return metaBean().discountingCurveCalculationConfig().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the forward ibor curve name.
   * @return the value of the property, not null
   */
  public String getForwardIborCurveName() {
    return _forwardIborCurveName;
  }

  /**
   * Sets the forward ibor curve name.
   * @param forwardIborCurveName  the new value of the property, not null
   */
  public void setForwardIborCurveName(String forwardIborCurveName) {
    JodaBeanUtils.notNull(forwardIborCurveName, "forwardIborCurveName");
    this._forwardIborCurveName = forwardIborCurveName;
  }

  /**
   * Gets the the {@code forwardIborCurveName} property.
   * @return the property, not null
   */
  public final Property<String> forwardIborCurveName() {
    return metaBean().forwardIborCurveName().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the forward ibor curve calculation configuration name.
   * @return the value of the property, not null
   */
  public String getForwardIborCurveCalculationConfig() {
    return _forwardIborCurveCalculationConfig;
  }

  /**
   * Sets the forward ibor curve calculation configuration name.
   * @param forwardIborCurveCalculationConfig  the new value of the property, not null
   */
  public void setForwardIborCurveCalculationConfig(String forwardIborCurveCalculationConfig) {
    JodaBeanUtils.notNull(forwardIborCurveCalculationConfig, "forwardIborCurveCalculationConfig");
    this._forwardIborCurveCalculationConfig = forwardIborCurveCalculationConfig;
  }

  /**
   * Gets the the {@code forwardIborCurveCalculationConfig} property.
   * @return the property, not null
   */
  public final Property<String> forwardIborCurveCalculationConfig() {
    return metaBean().forwardIborCurveCalculationConfig().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the forward overnight curve name.
   * @return the value of the property, not null
   */
  public String getForwardOvernightCurveName() {
    return _forwardOvernightCurveName;
  }

  /**
   * Sets the forward overnight curve name.
   * @param forwardOvernightCurveName  the new value of the property, not null
   */
  public void setForwardOvernightCurveName(String forwardOvernightCurveName) {
    JodaBeanUtils.notNull(forwardOvernightCurveName, "forwardOvernightCurveName");
    this._forwardOvernightCurveName = forwardOvernightCurveName;
  }

  /**
   * Gets the the {@code forwardOvernightCurveName} property.
   * @return the property, not null
   */
  public final Property<String> forwardOvernightCurveName() {
    return metaBean().forwardOvernightCurveName().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the forward overnight curve calculation configuration name.
   * @return the value of the property, not null
   */
  public String getForwardOvernightCurveCalculationConfig() {
    return _forwardOvernightCurveCalculationConfig;
  }

  /**
   * Sets the forward overnight curve calculation configuration name.
   * @param forwardOvernightCurveCalculationConfig  the new value of the property, not null
   */
  public void setForwardOvernightCurveCalculationConfig(String forwardOvernightCurveCalculationConfig) {
    JodaBeanUtils.notNull(forwardOvernightCurveCalculationConfig, "forwardOvernightCurveCalculationConfig");
    this._forwardOvernightCurveCalculationConfig = forwardOvernightCurveCalculationConfig;
  }

  /**
   * Gets the the {@code forwardOvernightCurveCalculationConfig} property.
   * @return the property, not null
   */
  public final Property<String> forwardOvernightCurveCalculationConfig() {
    return metaBean().forwardOvernightCurveCalculationConfig().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code DiscountingMethodCurveExposureConfiguration}.
   */
  public static class Meta extends CurveExposureConfiguration.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code discountingCurveName} property.
     */
    private final MetaProperty<String> _discountingCurveName = DirectMetaProperty.ofReadWrite(
        this, "discountingCurveName", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-property for the {@code discountingCurveCalculationConfig} property.
     */
    private final MetaProperty<String> _discountingCurveCalculationConfig = DirectMetaProperty.ofReadWrite(
        this, "discountingCurveCalculationConfig", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-property for the {@code forwardIborCurveName} property.
     */
    private final MetaProperty<String> _forwardIborCurveName = DirectMetaProperty.ofReadWrite(
        this, "forwardIborCurveName", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-property for the {@code forwardIborCurveCalculationConfig} property.
     */
    private final MetaProperty<String> _forwardIborCurveCalculationConfig = DirectMetaProperty.ofReadWrite(
        this, "forwardIborCurveCalculationConfig", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-property for the {@code forwardOvernightCurveName} property.
     */
    private final MetaProperty<String> _forwardOvernightCurveName = DirectMetaProperty.ofReadWrite(
        this, "forwardOvernightCurveName", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-property for the {@code forwardOvernightCurveCalculationConfig} property.
     */
    private final MetaProperty<String> _forwardOvernightCurveCalculationConfig = DirectMetaProperty.ofReadWrite(
        this, "forwardOvernightCurveCalculationConfig", DiscountingMethodCurveExposureConfiguration.class, String.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "discountingCurveName",
        "discountingCurveCalculationConfig",
        "forwardIborCurveName",
        "forwardIborCurveCalculationConfig",
        "forwardOvernightCurveName",
        "forwardOvernightCurveCalculationConfig");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 1721549337:  // discountingCurveName
          return _discountingCurveName;
        case 779895453:  // discountingCurveCalculationConfig
          return _discountingCurveCalculationConfig;
        case 680189945:  // forwardIborCurveName
          return _forwardIborCurveName;
        case 1094037693:  // forwardIborCurveCalculationConfig
          return _forwardIborCurveCalculationConfig;
        case 1802500187:  // forwardOvernightCurveName
          return _forwardOvernightCurveName;
        case -599865445:  // forwardOvernightCurveCalculationConfig
          return _forwardOvernightCurveCalculationConfig;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends DiscountingMethodCurveExposureConfiguration> builder() {
      return new DirectBeanBuilder<DiscountingMethodCurveExposureConfiguration>(new DiscountingMethodCurveExposureConfiguration());
    }

    @Override
    public Class<? extends DiscountingMethodCurveExposureConfiguration> beanType() {
      return DiscountingMethodCurveExposureConfiguration.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code discountingCurveName} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> discountingCurveName() {
      return _discountingCurveName;
    }

    /**
     * The meta-property for the {@code discountingCurveCalculationConfig} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> discountingCurveCalculationConfig() {
      return _discountingCurveCalculationConfig;
    }

    /**
     * The meta-property for the {@code forwardIborCurveName} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> forwardIborCurveName() {
      return _forwardIborCurveName;
    }

    /**
     * The meta-property for the {@code forwardIborCurveCalculationConfig} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> forwardIborCurveCalculationConfig() {
      return _forwardIborCurveCalculationConfig;
    }

    /**
     * The meta-property for the {@code forwardOvernightCurveName} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> forwardOvernightCurveName() {
      return _forwardOvernightCurveName;
    }

    /**
     * The meta-property for the {@code forwardOvernightCurveCalculationConfig} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> forwardOvernightCurveCalculationConfig() {
      return _forwardOvernightCurveCalculationConfig;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
