/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.financial.analytics.curve;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.core.config.Config;
import com.opengamma.id.MutableUniqueIdentifiable;
import com.opengamma.id.UniqueId;
import com.opengamma.id.UniqueIdentifiable;

/**
 * 
 */
@BeanDefinition
@Config
public class CurveGroupConfiguration extends DirectBean implements Serializable, UniqueIdentifiable, MutableUniqueIdentifiable {

  /** Serialization version */
  private static final long serialVersionUID = 1L;

  /**
   * The order.
   */
  @PropertyDefinition
  private int _order;

  /**
   * The curve types.
   */
  @PropertyDefinition(validate = "notNull")
  private List<CurveTypeConfiguration> _curveTypes;

  /**
   * The unique id.
   */
  @PropertyDefinition
  private UniqueId _uniqueId;

  /**
   * For the fudge builder
   */
  /* package */ CurveGroupConfiguration() {
  }

  public CurveGroupConfiguration(final int order, final List<CurveTypeConfiguration> curveTypes) {
    setOrder(order);
    setCurveTypes(curveTypes);
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CurveGroupConfiguration}.
   * @return the meta-bean, not null
   */
  public static CurveGroupConfiguration.Meta meta() {
    return CurveGroupConfiguration.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CurveGroupConfiguration.Meta.INSTANCE);
  }

  @Override
  public CurveGroupConfiguration.Meta metaBean() {
    return CurveGroupConfiguration.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 106006350:  // order
        return getOrder();
      case -1857772342:  // curveTypes
        return getCurveTypes();
      case -294460212:  // uniqueId
        return getUniqueId();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 106006350:  // order
        setOrder((Integer) newValue);
        return;
      case -1857772342:  // curveTypes
        setCurveTypes((List<CurveTypeConfiguration>) newValue);
        return;
      case -294460212:  // uniqueId
        setUniqueId((UniqueId) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_curveTypes, "curveTypes");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CurveGroupConfiguration other = (CurveGroupConfiguration) obj;
      return JodaBeanUtils.equal(getOrder(), other.getOrder()) &&
          JodaBeanUtils.equal(getCurveTypes(), other.getCurveTypes()) &&
          JodaBeanUtils.equal(getUniqueId(), other.getUniqueId());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getOrder());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurveTypes());
    hash += hash * 31 + JodaBeanUtils.hashCode(getUniqueId());
    return hash;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the order.
   * @return the value of the property
   */
  public int getOrder() {
    return _order;
  }

  /**
   * Sets the order.
   * @param order  the new value of the property
   */
  public void setOrder(int order) {
    this._order = order;
  }

  /**
   * Gets the the {@code order} property.
   * @return the property, not null
   */
  public final Property<Integer> order() {
    return metaBean().order().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the curve types.
   * @return the value of the property, not null
   */
  public List<CurveTypeConfiguration> getCurveTypes() {
    return _curveTypes;
  }

  /**
   * Sets the curve types.
   * @param curveTypes  the new value of the property, not null
   */
  public void setCurveTypes(List<CurveTypeConfiguration> curveTypes) {
    JodaBeanUtils.notNull(curveTypes, "curveTypes");
    this._curveTypes = curveTypes;
  }

  /**
   * Gets the the {@code curveTypes} property.
   * @return the property, not null
   */
  public final Property<List<CurveTypeConfiguration>> curveTypes() {
    return metaBean().curveTypes().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the unique id.
   * @return the value of the property
   */
  public UniqueId getUniqueId() {
    return _uniqueId;
  }

  /**
   * Sets the unique id.
   * @param uniqueId  the new value of the property
   */
  public void setUniqueId(UniqueId uniqueId) {
    this._uniqueId = uniqueId;
  }

  /**
   * Gets the the {@code uniqueId} property.
   * @return the property, not null
   */
  public final Property<UniqueId> uniqueId() {
    return metaBean().uniqueId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CurveGroupConfiguration}.
   */
  public static class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code order} property.
     */
    private final MetaProperty<Integer> _order = DirectMetaProperty.ofReadWrite(
        this, "order", CurveGroupConfiguration.class, Integer.TYPE);
    /**
     * The meta-property for the {@code curveTypes} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<List<CurveTypeConfiguration>> _curveTypes = DirectMetaProperty.ofReadWrite(
        this, "curveTypes", CurveGroupConfiguration.class, (Class) List.class);
    /**
     * The meta-property for the {@code uniqueId} property.
     */
    private final MetaProperty<UniqueId> _uniqueId = DirectMetaProperty.ofReadWrite(
        this, "uniqueId", CurveGroupConfiguration.class, UniqueId.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "order",
        "curveTypes",
        "uniqueId");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 106006350:  // order
          return _order;
        case -1857772342:  // curveTypes
          return _curveTypes;
        case -294460212:  // uniqueId
          return _uniqueId;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CurveGroupConfiguration> builder() {
      return new DirectBeanBuilder<CurveGroupConfiguration>(new CurveGroupConfiguration());
    }

    @Override
    public Class<? extends CurveGroupConfiguration> beanType() {
      return CurveGroupConfiguration.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code order} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Integer> order() {
      return _order;
    }

    /**
     * The meta-property for the {@code curveTypes} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<List<CurveTypeConfiguration>> curveTypes() {
      return _curveTypes;
    }

    /**
     * The meta-property for the {@code uniqueId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<UniqueId> uniqueId() {
      return _uniqueId;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
