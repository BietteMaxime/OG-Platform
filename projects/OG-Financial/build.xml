<project name="og-financial" default="compile">
	<property file="build.properties" />

	<import file="${common.dir}/common.xml" />

    <property file="${test.properties.dir}/db.properties"/>

	<available property="dbscript.create" value="${basedir}/create" file="${basedir}/create-db-common.sql" />
	<target name="dbscript-create-db-sql" if="dbscript.create">
	    <antcall target="create-db-sql-impl-2">
            <param name="dbscript.prefix" value="create" />
	    </antcall>
	</target>
	<available property="dbscript.upgrade" value="${basedir}/upgrade" file="${basedir}/upgrade-db-common.sql" />
	<target name="dbscript-upgrade-db-sql" if="dbscript.upgrade">
        <antcall target="create-db-sql-impl-2">
            <param name="dbscript.prefix" value="upgrade" />
        </antcall>
	</target>
	<target name="create-db-sql-impl" depends="dbscript-create-db-sql,dbscript-upgrade-db-sql" />
	<target name="create-db-sql-impl-2" if="dbscript.prefix">
		<echo>Writing ${basedir}/${dbscript.prefix}-db.sql</echo>
		<concat fixlastline="yes" force="no" destfile="${basedir}/${dbscript.prefix}-db.sql">
			<header filtering="no" trimleading="true">-- IMPORTANT:
			--
			-- This file was generated by concatenating the other .sql files together. It can be
			-- used for testing, but the separate SQL sequences will be necessary if the Security Master
			-- and Position Master need to be installed in different databases.
			--
			-- Please do not modify it - modify the originals and recreate this using 'ant create-db-sql'.

			</header>
			<fileset file="${basedir}/${dbscript.prefix}-db-common.sql" />
            <fileset file="${basedir}/${dbscript.prefix}-db-config.sql" />
            <fileset file="${basedir}/${dbscript.prefix}-db-refdata.sql" />
			<fileset file="${basedir}/${dbscript.prefix}-db-security.sql" />
			<fileset file="${basedir}/${dbscript.prefix}-db-position.sql" />
			<fileset file="${basedir}/${dbscript.prefix}-db-batch.sql" />
			<fileset file="${basedir}/${dbscript.prefix}-db-timeseries.sql" />
		</concat>
	</target>
	<target name="create-db-sql" description="--> create a single .sql files from the component ones">
		<subant target="create-db-sql-impl" genericantfile="${basedir}/build.xml">
			<property name="parent.dir" value="${basedir}" />
			<property name="common.dir" value="${common.dir}" />
            <dirset dir="${install.dir}/db" includes="*/patch_*" />
		</subant>
	</target>
	
	<target name="create-postgres-fin" description="--> run scripts to create database/user/schema/tables for financial db">
			<exec executable="${psql.path}"
		        failonerror="true">
		    	<arg value="--username"/>
				<arg value="${postgres.username}"/>
		    	<arg value="--host"/>
		    	<arg value="${postgres.host}"/>
		    	<arg value="--file"/>
		    	<arg value="db/postgres/create-og-fin-db-users.sql"/>
				<arg value="--dbname"/>
				<arg value="postgres"/>
		  	</exec>
			<exec executable="${psql.path}"
		        failonerror="true">
		    	<arg value="--username"/>
				<arg value="${postgres.username}"/>
		    	<arg value="--host"/>
		    	<arg value="${postgres.host}"/>
		    	<arg value="--file"/>
		    	<arg value="db/postgres/create-og-fin-schema.sql"/>
				<arg value="--dbname"/>
				<arg value="og_financial"/>
		  	</exec>
			<exec executable="${psql.path}" failonerror="true">
				<arg value="--username"/>
				<arg value="${postgres.username.financial}"/>
		    	<arg value="--host"/>
		    	<arg value="${postgres.host}"/>
		    	<arg value="--file"/>
		    	<arg value="db/postgres/create-og-fin-tables.sql"/>
				<arg value="--dbname"/>
				<arg value="og_financial"/>
			</exec>
	</target>

	<target name="publish" depends="zip-resources,common.publish" />

	<target name="publish-local" depends="zip-resources,common.publish-local" />

	<target name="zip-resources" description="--> create resources file for publishing">
	    <mkdir dir="${dist.dir}" />
	    <zip destfile="${dist.dir}/og-financial-resource.zip">
	    	<zipfileset dir="${basedir}/config" />
	    </zip>
	</target>
	
  <target name="antlr" description="Build the grammar for expression parsers">
    <exec executable="antlr3" dir="src">
      <arg value="-o" />
      <arg value="." />
      <arg value="com/opengamma/financial/expression/deprecated/Expr.g" />
    </exec>
  </target>

</project>
