/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.masterdb.security.hibernate.cds;

import java.util.Set;

import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;

import com.google.common.collect.Sets;
import com.opengamma.masterdb.security.hibernate.CDSIndexFamilyBean;
import com.opengamma.masterdb.security.hibernate.CurrencyBean;
import com.opengamma.masterdb.security.hibernate.SecurityBean;
import com.opengamma.masterdb.security.hibernate.TenorBean;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 * A Hibernate bean representation of {@link CreditDefaultSwapIndexSecurity}.
 */
@BeanDefinition
public class CreditDefaultSwapIndexSecurityBean  extends SecurityBean {
  
  @PropertyDefinition
  private String _name;
  @PropertyDefinition
  private String _version;
  @PropertyDefinition
  private String _series;
  @PropertyDefinition
  private CDSIndexFamilyBean _family;
  @PropertyDefinition
  private CurrencyBean _currency;
  @PropertyDefinition(set = "set", validate = "notNull")
  private Set<TenorBean> _tenors = Sets.newHashSet();
  @PropertyDefinition(set = "set", validate = "notNull")
  private Set<CDSIndexComponentBean> _components = Sets.newHashSet();

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CreditDefaultSwapIndexSecurityBean}.
   * @return the meta-bean, not null
   */
  public static CreditDefaultSwapIndexSecurityBean.Meta meta() {
    return CreditDefaultSwapIndexSecurityBean.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CreditDefaultSwapIndexSecurityBean.Meta.INSTANCE);
  }

  @Override
  public CreditDefaultSwapIndexSecurityBean.Meta metaBean() {
    return CreditDefaultSwapIndexSecurityBean.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 3373707:  // name
        return getName();
      case 351608024:  // version
        return getVersion();
      case -905838985:  // series
        return getSeries();
      case -1281860764:  // family
        return getFamily();
      case 575402001:  // currency
        return getCurrency();
      case -877322829:  // tenors
        return getTenors();
      case -447446250:  // components
        return getComponents();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 3373707:  // name
        setName((String) newValue);
        return;
      case 351608024:  // version
        setVersion((String) newValue);
        return;
      case -905838985:  // series
        setSeries((String) newValue);
        return;
      case -1281860764:  // family
        setFamily((CDSIndexFamilyBean) newValue);
        return;
      case 575402001:  // currency
        setCurrency((CurrencyBean) newValue);
        return;
      case -877322829:  // tenors
        setTenors((Set<TenorBean>) newValue);
        return;
      case -447446250:  // components
        setComponents((Set<CDSIndexComponentBean>) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_tenors, "tenors");
    JodaBeanUtils.notNull(_components, "components");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CreditDefaultSwapIndexSecurityBean other = (CreditDefaultSwapIndexSecurityBean) obj;
      return JodaBeanUtils.equal(getName(), other.getName()) &&
          JodaBeanUtils.equal(getVersion(), other.getVersion()) &&
          JodaBeanUtils.equal(getSeries(), other.getSeries()) &&
          JodaBeanUtils.equal(getFamily(), other.getFamily()) &&
          JodaBeanUtils.equal(getCurrency(), other.getCurrency()) &&
          JodaBeanUtils.equal(getTenors(), other.getTenors()) &&
          JodaBeanUtils.equal(getComponents(), other.getComponents()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash += hash * 31 + JodaBeanUtils.hashCode(getName());
    hash += hash * 31 + JodaBeanUtils.hashCode(getVersion());
    hash += hash * 31 + JodaBeanUtils.hashCode(getSeries());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFamily());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurrency());
    hash += hash * 31 + JodaBeanUtils.hashCode(getTenors());
    hash += hash * 31 + JodaBeanUtils.hashCode(getComponents());
    return hash ^ super.hashCode();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the name.
   * @return the value of the property
   */
  public String getName() {
    return _name;
  }

  /**
   * Sets the name.
   * @param name  the new value of the property
   */
  public void setName(String name) {
    this._name = name;
  }

  /**
   * Gets the the {@code name} property.
   * @return the property, not null
   */
  public final Property<String> name() {
    return metaBean().name().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the version.
   * @return the value of the property
   */
  public String getVersion() {
    return _version;
  }

  /**
   * Sets the version.
   * @param version  the new value of the property
   */
  public void setVersion(String version) {
    this._version = version;
  }

  /**
   * Gets the the {@code version} property.
   * @return the property, not null
   */
  public final Property<String> version() {
    return metaBean().version().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the series.
   * @return the value of the property
   */
  public String getSeries() {
    return _series;
  }

  /**
   * Sets the series.
   * @param series  the new value of the property
   */
  public void setSeries(String series) {
    this._series = series;
  }

  /**
   * Gets the the {@code series} property.
   * @return the property, not null
   */
  public final Property<String> series() {
    return metaBean().series().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the family.
   * @return the value of the property
   */
  public CDSIndexFamilyBean getFamily() {
    return _family;
  }

  /**
   * Sets the family.
   * @param family  the new value of the property
   */
  public void setFamily(CDSIndexFamilyBean family) {
    this._family = family;
  }

  /**
   * Gets the the {@code family} property.
   * @return the property, not null
   */
  public final Property<CDSIndexFamilyBean> family() {
    return metaBean().family().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the currency.
   * @return the value of the property
   */
  public CurrencyBean getCurrency() {
    return _currency;
  }

  /**
   * Sets the currency.
   * @param currency  the new value of the property
   */
  public void setCurrency(CurrencyBean currency) {
    this._currency = currency;
  }

  /**
   * Gets the the {@code currency} property.
   * @return the property, not null
   */
  public final Property<CurrencyBean> currency() {
    return metaBean().currency().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the tenors.
   * @return the value of the property, not null
   */
  public Set<TenorBean> getTenors() {
    return _tenors;
  }

  /**
   * Sets the tenors.
   * @param tenors  the new value of the property, not null
   */
  public void setTenors(Set<TenorBean> tenors) {
    JodaBeanUtils.notNull(tenors, "tenors");
    this._tenors = tenors;
  }

  /**
   * Gets the the {@code tenors} property.
   * @return the property, not null
   */
  public final Property<Set<TenorBean>> tenors() {
    return metaBean().tenors().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the components.
   * @return the value of the property, not null
   */
  public Set<CDSIndexComponentBean> getComponents() {
    return _components;
  }

  /**
   * Sets the components.
   * @param components  the new value of the property, not null
   */
  public void setComponents(Set<CDSIndexComponentBean> components) {
    JodaBeanUtils.notNull(components, "components");
    this._components = components;
  }

  /**
   * Gets the the {@code components} property.
   * @return the property, not null
   */
  public final Property<Set<CDSIndexComponentBean>> components() {
    return metaBean().components().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CreditDefaultSwapIndexSecurityBean}.
   */
  public static class Meta extends SecurityBean.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code name} property.
     */
    private final MetaProperty<String> _name = DirectMetaProperty.ofReadWrite(
        this, "name", CreditDefaultSwapIndexSecurityBean.class, String.class);
    /**
     * The meta-property for the {@code version} property.
     */
    private final MetaProperty<String> _version = DirectMetaProperty.ofReadWrite(
        this, "version", CreditDefaultSwapIndexSecurityBean.class, String.class);
    /**
     * The meta-property for the {@code series} property.
     */
    private final MetaProperty<String> _series = DirectMetaProperty.ofReadWrite(
        this, "series", CreditDefaultSwapIndexSecurityBean.class, String.class);
    /**
     * The meta-property for the {@code family} property.
     */
    private final MetaProperty<CDSIndexFamilyBean> _family = DirectMetaProperty.ofReadWrite(
        this, "family", CreditDefaultSwapIndexSecurityBean.class, CDSIndexFamilyBean.class);
    /**
     * The meta-property for the {@code currency} property.
     */
    private final MetaProperty<CurrencyBean> _currency = DirectMetaProperty.ofReadWrite(
        this, "currency", CreditDefaultSwapIndexSecurityBean.class, CurrencyBean.class);
    /**
     * The meta-property for the {@code tenors} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<Set<TenorBean>> _tenors = DirectMetaProperty.ofReadWrite(
        this, "tenors", CreditDefaultSwapIndexSecurityBean.class, (Class) Set.class);
    /**
     * The meta-property for the {@code components} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<Set<CDSIndexComponentBean>> _components = DirectMetaProperty.ofReadWrite(
        this, "components", CreditDefaultSwapIndexSecurityBean.class, (Class) Set.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "name",
        "version",
        "series",
        "family",
        "currency",
        "tenors",
        "components");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 3373707:  // name
          return _name;
        case 351608024:  // version
          return _version;
        case -905838985:  // series
          return _series;
        case -1281860764:  // family
          return _family;
        case 575402001:  // currency
          return _currency;
        case -877322829:  // tenors
          return _tenors;
        case -447446250:  // components
          return _components;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CreditDefaultSwapIndexSecurityBean> builder() {
      return new DirectBeanBuilder<CreditDefaultSwapIndexSecurityBean>(new CreditDefaultSwapIndexSecurityBean());
    }

    @Override
    public Class<? extends CreditDefaultSwapIndexSecurityBean> beanType() {
      return CreditDefaultSwapIndexSecurityBean.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code name} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> name() {
      return _name;
    }

    /**
     * The meta-property for the {@code version} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> version() {
      return _version;
    }

    /**
     * The meta-property for the {@code series} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> series() {
      return _series;
    }

    /**
     * The meta-property for the {@code family} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<CDSIndexFamilyBean> family() {
      return _family;
    }

    /**
     * The meta-property for the {@code currency} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<CurrencyBean> currency() {
      return _currency;
    }

    /**
     * The meta-property for the {@code tenors} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Set<TenorBean>> tenors() {
      return _tenors;
    }

    /**
     * The meta-property for the {@code components} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Set<CDSIndexComponentBean>> components() {
      return _components;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
