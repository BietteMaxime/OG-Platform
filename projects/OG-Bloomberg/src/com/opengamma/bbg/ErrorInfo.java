/**
 * Copyright (C) 2009 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */

package com.opengamma.bbg;

import java.util.Map;

import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.bloomberglp.blpapi.Element;

/**
 * Information about a bloomberg error
 * See API developer guide A.2.22
 */
@BeanDefinition
public class ErrorInfo extends DirectBean {
  //TODO source
  
  @PropertyDefinition
  private int _code;
  @PropertyDefinition
  private String _category;
  @PropertyDefinition
  private String _subcategory;
  @PropertyDefinition
  private String _message;

  protected ErrorInfo() {
  }
  
  public ErrorInfo(int code, String category, String subcategory, String message) {
    super();
    _code = code;
    _category = category;
    _subcategory = subcategory;
    _message = message;
  }

  public ErrorInfo(Element element) {
    setCode(element.getElementAsInt32("code"));
    setCategory(element.getElementAsString("category"));
    setSubcategory(element.getElementAsString("subcategory"));
    setMessage(element.getElementAsString("message"));
  }
  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code ErrorInfo}.
   * @return the meta-bean, not null
   */
  public static ErrorInfo.Meta meta() {
    return ErrorInfo.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(ErrorInfo.Meta.INSTANCE);
  }

  @Override
  public ErrorInfo.Meta metaBean() {
    return ErrorInfo.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 3059181:  // code
        return getCode();
      case 50511102:  // category
        return getCategory();
      case 1300380478:  // subcategory
        return getSubcategory();
      case 954925063:  // message
        return getMessage();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 3059181:  // code
        setCode((Integer) newValue);
        return;
      case 50511102:  // category
        setCategory((String) newValue);
        return;
      case 1300380478:  // subcategory
        setSubcategory((String) newValue);
        return;
      case 954925063:  // message
        setMessage((String) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      ErrorInfo other = (ErrorInfo) obj;
      return JodaBeanUtils.equal(getCode(), other.getCode()) &&
          JodaBeanUtils.equal(getCategory(), other.getCategory()) &&
          JodaBeanUtils.equal(getSubcategory(), other.getSubcategory()) &&
          JodaBeanUtils.equal(getMessage(), other.getMessage());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getCode());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCategory());
    hash += hash * 31 + JodaBeanUtils.hashCode(getSubcategory());
    hash += hash * 31 + JodaBeanUtils.hashCode(getMessage());
    return hash;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the code.
   * @return the value of the property
   */
  public int getCode() {
    return _code;
  }

  /**
   * Sets the code.
   * @param code  the new value of the property
   */
  public void setCode(int code) {
    this._code = code;
  }

  /**
   * Gets the the {@code code} property.
   * @return the property, not null
   */
  public final Property<Integer> code() {
    return metaBean().code().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the category.
   * @return the value of the property
   */
  public String getCategory() {
    return _category;
  }

  /**
   * Sets the category.
   * @param category  the new value of the property
   */
  public void setCategory(String category) {
    this._category = category;
  }

  /**
   * Gets the the {@code category} property.
   * @return the property, not null
   */
  public final Property<String> category() {
    return metaBean().category().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the subcategory.
   * @return the value of the property
   */
  public String getSubcategory() {
    return _subcategory;
  }

  /**
   * Sets the subcategory.
   * @param subcategory  the new value of the property
   */
  public void setSubcategory(String subcategory) {
    this._subcategory = subcategory;
  }

  /**
   * Gets the the {@code subcategory} property.
   * @return the property, not null
   */
  public final Property<String> subcategory() {
    return metaBean().subcategory().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the message.
   * @return the value of the property
   */
  public String getMessage() {
    return _message;
  }

  /**
   * Sets the message.
   * @param message  the new value of the property
   */
  public void setMessage(String message) {
    this._message = message;
  }

  /**
   * Gets the the {@code message} property.
   * @return the property, not null
   */
  public final Property<String> message() {
    return metaBean().message().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code ErrorInfo}.
   */
  public static class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code code} property.
     */
    private final MetaProperty<Integer> _code = DirectMetaProperty.ofReadWrite(
        this, "code", ErrorInfo.class, Integer.TYPE);
    /**
     * The meta-property for the {@code category} property.
     */
    private final MetaProperty<String> _category = DirectMetaProperty.ofReadWrite(
        this, "category", ErrorInfo.class, String.class);
    /**
     * The meta-property for the {@code subcategory} property.
     */
    private final MetaProperty<String> _subcategory = DirectMetaProperty.ofReadWrite(
        this, "subcategory", ErrorInfo.class, String.class);
    /**
     * The meta-property for the {@code message} property.
     */
    private final MetaProperty<String> _message = DirectMetaProperty.ofReadWrite(
        this, "message", ErrorInfo.class, String.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "code",
        "category",
        "subcategory",
        "message");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 3059181:  // code
          return _code;
        case 50511102:  // category
          return _category;
        case 1300380478:  // subcategory
          return _subcategory;
        case 954925063:  // message
          return _message;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends ErrorInfo> builder() {
      return new DirectBeanBuilder<ErrorInfo>(new ErrorInfo());
    }

    @Override
    public Class<? extends ErrorInfo> beanType() {
      return ErrorInfo.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code code} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Integer> code() {
      return _code;
    }

    /**
     * The meta-property for the {@code category} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> category() {
      return _category;
    }

    /**
     * The meta-property for the {@code subcategory} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> subcategory() {
      return _subcategory;
    }

    /**
     * The meta-property for the {@code message} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> message() {
      return _message;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
