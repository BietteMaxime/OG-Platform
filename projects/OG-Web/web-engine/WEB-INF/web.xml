<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

  <!-- Cometd -->
  <servlet>
      <servlet-name>cometd</servlet-name>
      <servlet-class>org.cometd.server.continuation.ContinuationCometdServlet</servlet-class>
      <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
      <servlet-name>cometd</servlet-name>
      <url-pattern>/cometd/*</url-pattern>
  </servlet-mapping>
  <filter>
      <filter-name>cross-origin</filter-name>
      <filter-class>org.eclipse.jetty.servlets.CrossOriginFilter</filter-class>
  </filter>
  <filter-mapping>
      <filter-name>cross-origin</filter-name>
      <url-pattern>/cometd/*</url-pattern>
  </filter-mapping>

  <!-- Jersey - JAXRS support -->
  <servlet>
    <servlet-name>jersey-spring</servlet-name>
    <servlet-class>com.opengamma.component.rest.OpenGammaServlet</servlet-class>
    <!--for creating subscriptions to entity updates-->
    <init-param>
      <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
      <param-value>com.opengamma.web.server.push.rest.SubscribingFilterFactory</param-value>
    </init-param>
    <load-on-startup>3</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>jersey-spring</servlet-name>
    <url-pattern>/jax/*</url-pattern>
  </servlet-mapping>

  <!--HTTP push support-->
  <servlet>
    <servlet-name>handshake</servlet-name>
    <servlet-class>com.opengamma.web.server.push.HandshakeServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>handshake</servlet-name>
    <url-pattern>/handshake</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>updates</servlet-name>
    <servlet-class>com.opengamma.web.server.push.LongPollingServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>updates</servlet-name>
    <url-pattern>/updates/*</url-pattern>
  </servlet-mapping>
  <!--end of HTTP push support-->

  <!-- Jolokia - jmx bridge -->
  <servlet>
    <servlet-name>jolokia-agent</servlet-name>
    <servlet-class>org.jolokia.http.AgentServlet</servlet-class>
    <init-param>
      <description>
        Class names (comma separated) of RequestDispatcher used in addition
        to the LocalRequestDispatcher
      </description>
      <param-name>dispatcherClasses</param-name>
      <param-value>org.jolokia.jsr160.Jsr160RequestDispatcher</param-value>
    </init-param>
    <init-param>
      <description>
        Debugging state after startup. Can be changed via
        the Config MBean during runtime
      </description>
      <param-name>debug</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <description>
        Entries to keep in the history. Can be changed during
        runtime via the config MBean
      </description>
      <param-name>historyMaxEntries</param-name>
      <param-value>10</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum number of entries to keed in the local
        debug history if switched on. Can be change via
        the config MBean during runtime.
      </description>
      <param-name>debugMaxEntries</param-name>
      <param-value>100</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum depth when traversing bean properties.
        If set to 0, depth checking is disabled
      </description>
      <param-name>maxDepth</param-name>
      <param-value>15</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum size of collections returned when
        serializing to JSON. When set to 0, not
        collections are truncated.
      </description>
      <param-name>maxCollectionSize</param-name>
      <param-value>1000</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum number of objects which is traversed
        when serializing a single response. Use this
        as airbag to avoid boosting your memory and
        network traffic. Nevertheless, when set to 0
        not limit is used.
      </description>
      <param-name>maxObjects</param-name>
      <param-value>0</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>jolokia-agent</servlet-name>
    <url-pattern>/admin/jmx/*</url-pattern>
  </servlet-mapping>
  <!-- end of Jolokia - jmx bridge -->

  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>AdminRealm</realm-name>
  </login-config>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Admin Access</web-resource-name>
      <url-pattern>/admin/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>admin</role-name>
    </auth-constraint>
  </security-constraint>

  <security-role>
    <role-name>admin</role-name>
  </security-role>

  <!-- Ehcache shutdown hook -->
  <listener>
    <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>
  </listener>
  <!-- Bind CometD/Bayeux to Web analytics -->
  <listener>
    <listener-class>com.opengamma.web.analytics.WebAnalyticsBayeuxInitializer</listener-class>
  </listener>

  <!-- Disable Jetty's locking of static files -->
  <servlet>
    <servlet-name>default</servlet-name>
    <init-param>
      <param-name>useFileMappedBuffer</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>

</web-app>
