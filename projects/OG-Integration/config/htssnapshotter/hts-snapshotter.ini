# Configuration to setup a historical timeseries snaphotter

[global]
time.zone = Europe/London

[infrastructure]
factory = com.opengamma.integration.timeseries.snapshotter.SpringHTSSnapshotInfrastructureComponentFactory
springFile = ${component.infrastructure.springFile}
propertiesFile = ${component.infrastructure.propertiesFile}

#============================================================================
[dbHtsMaster]
factory = com.opengamma.component.factory.master.DbHistoricalTimeSeriesMasterComponentFactory
classifier = central
dbConnector = ::hts

#============================================================================
[htsSnapshotterJobDetail]
factory = com.opengamma.integration.timeseries.snapshotter.JobDetailComponentFactory
classifier = hts
name = HtsJobDetail
htsMaster = ::central
redisConnector = ::hts

#============================================================================
[londonCloseSnapshot]
factory = com.opengamma.integration.timeseries.snapshotter.CronTriggerComponentFactory
classifier = standard
jobDetail = ::hts
name = LondonClose
cronExpression = ${londonCloseSnapshot.cronExpression}
dataSource = ${londonCloseSnapshot.datasource}
normalizationRuleSetId = ${londonCloseSnapshot.normalizationRuleSetId}
observationTime = ${londonCloseSnapshot.observationTime}
schemeBlackList = SchemeBlackList::hts
dataFieldBlackList = ::hts

#============================================================================
[htsSnapshotterScheduler]
factory = com.opengamma.integration.timeseries.snapshotter.SchedulerComponentFactory
classifier = standard